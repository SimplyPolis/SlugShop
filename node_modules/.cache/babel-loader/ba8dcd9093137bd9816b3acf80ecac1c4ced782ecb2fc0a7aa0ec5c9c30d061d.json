{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isBlockScoped;\nvar _index = require(\"./generated/index.js\");\nvar _isLet = require(\"./isLet.js\");\nfunction isBlockScoped(node) {\n  return (0, _index.isFunctionDeclaration)(node) || (0, _index.isClassDeclaration)(node) || (0, _isLet.default)(node);\n}","map":{"version":3,"names":["_index","require","_isLet","isBlockScoped","node","isFunctionDeclaration","isClassDeclaration","default"],"sources":["C:\\Users\\micha\\OneDrive\\Documents\\GitHub\\SlugShop\\node_modules\\@babel\\types\\src\\validators\\isBlockScoped.ts"],"sourcesContent":["import {\n  isClassDeclaration,\n  isFunctionDeclaration,\n} from \"./generated/index.ts\";\nimport isLet from \"./isLet.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Check if the input `node` is block scoped.\n */\nexport default function isBlockScoped(node: t.Node): boolean {\n  return isFunctionDeclaration(node) || isClassDeclaration(node) || isLet(node);\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAIA,IAAAC,MAAA,GAAAD,OAAA;AAMe,SAASE,aAAaA,CAACC,IAAY,EAAW;EAC3D,OAAO,IAAAJ,MAAA,CAAAK,qBAAqB,EAACD,IAAI,CAAC,IAAI,IAAAJ,MAAA,CAAAM,kBAAkB,EAACF,IAAI,CAAC,IAAI,IAAAF,MAAA,CAAAK,OAAK,EAACH,IAAI,CAAC;AAC/E"},"metadata":{},"sourceType":"script","externalDependencies":[]}