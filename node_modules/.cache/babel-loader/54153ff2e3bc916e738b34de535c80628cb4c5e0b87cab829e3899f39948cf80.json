{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isLet;\nvar _index = require(\"./generated/index.js\");\nvar _index2 = require(\"../constants/index.js\");\nfunction isLet(node) {\n  return (0, _index.isVariableDeclaration)(node) && (node.kind !== \"var\" || node[_index2.BLOCK_SCOPED_SYMBOL]);\n}","map":{"version":3,"names":["_index","require","_index2","isLet","node","isVariableDeclaration","kind","BLOCK_SCOPED_SYMBOL"],"sources":["C:\\Users\\micha\\OneDrive\\Documents\\GitHub\\SlugShop\\node_modules\\@babel\\types\\src\\validators\\isLet.ts"],"sourcesContent":["import { isVariableDeclaration } from \"./generated/index.ts\";\nimport { BLOCK_SCOPED_SYMBOL } from \"../constants/index.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Check if the input `node` is a `let` variable declaration.\n */\nexport default function isLet(node: t.Node): boolean {\n  return (\n    isVariableDeclaration(node) &&\n    (node.kind !== \"var\" ||\n      // @ts-expect-error Fixme: document private properties\n      node[BLOCK_SCOPED_SYMBOL])\n  );\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AAMe,SAASE,KAAKA,CAACC,IAAY,EAAW;EACnD,OACE,IAAAJ,MAAA,CAAAK,qBAAqB,EAACD,IAAI,CAAC,KAC1BA,IAAI,CAACE,IAAI,KAAK,KAAK,IAElBF,IAAI,CAACF,OAAA,CAAAK,mBAAmB,CAAC,CAAC;AAEhC"},"metadata":{},"sourceType":"script","externalDependencies":[]}