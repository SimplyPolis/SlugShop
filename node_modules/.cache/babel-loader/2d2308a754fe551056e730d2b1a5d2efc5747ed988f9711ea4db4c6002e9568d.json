{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = validateNode;\nvar _validate = require(\"../validators/validate.js\");\nvar _index = require(\"../index.js\");\nfunction validateNode(node) {\n  const keys = _index.BUILDER_KEYS[node.type];\n  for (const key of keys) {\n    (0, _validate.default)(node, key, node[key]);\n  }\n  return node;\n}","map":{"version":3,"names":["_validate","require","_index","validateNode","node","keys","BUILDER_KEYS","type","key","default"],"sources":["/Users/michaelalaniz/Documents/SlugShop/node_modules/@babel/types/src/builders/validateNode.ts"],"sourcesContent":["import validate from \"../validators/validate.ts\";\nimport type * as t from \"../index.ts\";\nimport { BUILDER_KEYS } from \"../index.ts\";\n\nexport default function validateNode<N extends t.Node>(node: N) {\n  // todo: because keys not in BUILDER_KEYS are not validated - this actually allows invalid nodes in some cases\n  const keys = BUILDER_KEYS[node.type] as (keyof N & string)[];\n  for (const key of keys) {\n    validate(node, key, node[key]);\n  }\n  return node;\n}\n"],"mappings":";;;;;;AAAA,IAAAA,SAAA,GAAAC,OAAA;AAEA,IAAAC,MAAA,GAAAD,OAAA;AAEe,SAASE,YAAYA,CAAmBC,IAAO,EAAE;EAE9D,MAAMC,IAAI,GAAGH,MAAA,CAAAI,YAAY,CAACF,IAAI,CAACG,IAAI,CAAyB;EAC5D,KAAK,MAAMC,GAAG,IAAIH,IAAI,EAAE;IACtB,IAAAL,SAAA,CAAAS,OAAQ,EAACL,IAAI,EAAEI,GAAG,EAAEJ,IAAI,CAACI,GAAG,CAAC,CAAC;EAChC;EACA,OAAOJ,IAAI;AACb"},"metadata":{},"sourceType":"script","externalDependencies":[]}