const minimalcss = eval('require')('./index')
const cheerio = require('cheerio')
const request = require('request')
const csso = require('csso')

const URL = 'https://www.peterbe.com/about'
request.get(URL, function(error, response, body) {
  if (error) {
    throw error
  } else if (response.statusCode !== 200) {
    throw new Error(`${response.statusCode} error`)
  }
  $ = cheerio.load(response.body)
  const keepVerbatim = [] // not using set because order matters
  $('link[rel="stylesheet"]').each((i, elem) => {
    const $elem = $(elem)
    if ($elem.data('mincss') === 'no') {
      keepVerbatim.push($elem.attr('href'))
    }
  })

  const options = {
    'urls': [URL],
    'verbose': true,
  }
  minimalcss
    .minimize(options)
    .then(result => {
      // console.log('keepVerbatim:', keepVerbatim);
      let finalFinalCss = result.finalCss
      keepVerbatim.forEach(url => {
        finalFinalCss += `\n/*! from ${url} */\n`
        finalFinalCss += result.stylesheetContents[url]
      })
      const minifiedFinalFinalCss = csso.minify(finalFinalCss).css;
      console.log(minifiedFinalFinalCss);

    })
    .catch(error => {
      throw error
    })


})
// // $ = cheerio.load('https://www.peterbe.com/about');
// console.log($.html());
// const options = {
//   'urls': [URL],
//   'verbose': true,
// }
// minimalcss
//   .minimize(options)
//   .then(result => {
//     console.log(Object.keys(result.stylesheetContents))
//
//   })
//   .catch(error => {
//     throw error
//   })
