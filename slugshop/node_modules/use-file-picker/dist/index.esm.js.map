{"version":3,"file":"index.esm.js","sources":["../src/helpers/openFileDialog.ts","../src/validators/useValidators.ts","../src/useFilePicker.ts","../src/useImperativeFilePicker.ts"],"sourcesContent":["export function openFileDialog(\n  accept: string,\n  multiple: boolean,\n  callback: (arg: Event) => void,\n  initializeWithCustomAttributes?: (arg: HTMLInputElement) => void\n): void {\n  // this function must be called from a user\n  // activation event (ie an onclick event)\n\n  // Create an input element\n  var inputElement = document.createElement('input');\n  // Hide element and append to body (required to run on iOS safari)\n  inputElement.style.display = 'none';\n  document.body.appendChild(inputElement);\n  // Set its type to file\n  inputElement.type = 'file';\n  // Set accept to the file types you want the user to select.\n  // Include both the file extension and the mime type\n  // if accept is \"*\" then dont set the accept attribute\n  if (accept !== '*') inputElement.accept = accept;\n  // Accept multiple files\n  inputElement.multiple = multiple;\n  // set onchange event to call callback when user has selected file\n  //inputElement.addEventListener('change', callback);\n  inputElement.addEventListener('change', arg => {\n    callback(arg);\n    // remove element\n    document.body.removeChild(inputElement);\n  });\n\n  if (initializeWithCustomAttributes) {\n    initializeWithCustomAttributes(inputElement);\n  }\n  // dispatch a click event to open the file dialog\n  inputElement.dispatchEvent(new MouseEvent('click'));\n}\n","import {\n  SelectedFilesOrErrors,\n  ExtractContentTypeFromConfig,\n  UseFilePickerConfig,\n  SelectedFiles,\n  FileErrors,\n} from '../interfaces';\n\nexport const useValidators = <ConfigType extends UseFilePickerConfig<CustomErrors>, CustomErrors>({\n  onFilesSelected: onFilesSelectedProp,\n  onFilesSuccessfullySelected: onFilesSuccessfullySelectedProp,\n  onFilesRejected: onFilesRejectedProp,\n  onClear: onClearProp,\n  validators,\n}: ConfigType) => {\n  // setup validators' event handlers\n  const onFilesSelected = (data: SelectedFilesOrErrors<ExtractContentTypeFromConfig<ConfigType>, CustomErrors>) => {\n    onFilesSelectedProp?.(data as any);\n    validators?.forEach(validator => {\n      validator.onFilesSelected(data as any);\n    });\n  };\n  const onFilesSuccessfullySelected = (data: SelectedFiles<ExtractContentTypeFromConfig<ConfigType>>) => {\n    onFilesSuccessfullySelectedProp?.(data as any);\n    validators?.forEach(validator => {\n      validator.onFilesSuccessfullySelected(data);\n    });\n  };\n  const onFilesRejected = (errors: FileErrors<CustomErrors>) => {\n    onFilesRejectedProp?.(errors);\n    validators?.forEach(validator => {\n      validator.onFilesRejected(errors);\n    });\n  };\n  const onClear = () => {\n    onClearProp?.();\n    validators?.forEach(validator => {\n      validator.onClear?.();\n    });\n  };\n\n  return {\n    onFilesSelected,\n    onFilesSuccessfullySelected,\n    onFilesRejected,\n    onClear,\n  };\n};\n","import { useState, useCallback } from 'react';\nimport { fromEvent, FileWithPath } from 'file-selector';\nimport {\n  UseFilePickerConfig,\n  FileContent,\n  FilePickerReturnTypes,\n  UseFilePickerError,\n  ReaderMethod,\n  ExtractContentTypeFromConfig,\n} from './interfaces';\nimport { openFileDialog } from './helpers/openFileDialog';\nimport { useValidators } from './validators/useValidators';\n\nfunction useFilePicker<\n  CustomErrors = unknown,\n  ConfigType extends UseFilePickerConfig<CustomErrors> = UseFilePickerConfig<CustomErrors>\n>(props: ConfigType): FilePickerReturnTypes<ExtractContentTypeFromConfig<ConfigType>, CustomErrors> {\n  const {\n    accept = '*',\n    multiple = true,\n    readAs = 'Text',\n    readFilesContent = true,\n    validators = [],\n    initializeWithCustomParameters,\n  } = props;\n\n  const [plainFiles, setPlainFiles] = useState<File[]>([]);\n  const [filesContent, setFilesContent] = useState<FileContent<ExtractContentTypeFromConfig<ConfigType>>[]>([]);\n  const [fileErrors, setFileErrors] = useState<UseFilePickerError<CustomErrors>[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const { onFilesSelected, onFilesSuccessfullySelected, onFilesRejected, onClear } =\n    useValidators<ConfigType, CustomErrors>(props);\n\n  const clear: () => void = useCallback(() => {\n    setPlainFiles([]);\n    setFilesContent([]);\n    setFileErrors([]);\n  }, []);\n\n  const clearWithEventListener: () => void = useCallback(() => {\n    clear();\n    onClear?.();\n  }, [clear, onClear]);\n\n  const parseFile = (file: FileWithPath) =>\n    new Promise<FileContent<ExtractContentTypeFromConfig<ConfigType>>>(\n      async (\n        resolve: (fileContent: FileContent<ExtractContentTypeFromConfig<ConfigType>>) => void,\n        reject: (reason: UseFilePickerError) => void\n      ) => {\n        const reader = new FileReader();\n\n        //availible reader methods: readAsText, readAsBinaryString, readAsArrayBuffer, readAsDataURL\n        const readStrategy = reader[`readAs${readAs}` as ReaderMethod] as typeof reader.readAsText;\n        readStrategy.call(reader, file);\n\n        const addError = ({ ...others }: UseFilePickerError) => {\n          reject({ ...others });\n        };\n\n        reader.onload = async () =>\n          Promise.all(\n            validators.map(validator =>\n              validator.validateAfterParsing(props, file, reader).catch(err => Promise.reject(addError(err)))\n            )\n          )\n            .then(() =>\n              resolve({\n                ...file,\n                content: reader.result as string,\n                name: file.name,\n                lastModified: file.lastModified,\n              } as FileContent<ExtractContentTypeFromConfig<ConfigType>>)\n            )\n            .catch(() => {});\n\n        reader.onerror = () => {\n          addError({ name: 'FileReaderError', readerError: reader.error, causedByFile: file });\n        };\n      }\n    );\n\n  const openFilePicker = () => {\n    const fileExtensions = accept instanceof Array ? accept.join(',') : accept;\n    openFileDialog(\n      fileExtensions,\n      multiple,\n      async evt => {\n        clear();\n        const inputElement = evt.target as HTMLInputElement;\n        const plainFileObjects = inputElement.files ? Array.from(inputElement.files) : [];\n\n        setLoading(true);\n\n        const validationsBeforeParsing = (\n          await Promise.all(\n            validators.map(validator =>\n              validator\n                .validateBeforeParsing(props, plainFileObjects)\n                .catch((err: UseFilePickerError | UseFilePickerError[]) => (Array.isArray(err) ? err : [err]))\n            )\n          )\n        )\n          .flat(1)\n          .filter(Boolean) as UseFilePickerError<CustomErrors>[];\n\n        setPlainFiles(plainFileObjects);\n        setFileErrors(validationsBeforeParsing);\n        if (validationsBeforeParsing.length) {\n          setLoading(false);\n          setPlainFiles([]);\n          onFilesRejected?.({ errors: validationsBeforeParsing });\n          onFilesSelected?.({ errors: validationsBeforeParsing });\n          return;\n        }\n\n        if (!readFilesContent) {\n          setLoading(false);\n          onFilesSelected?.({ plainFiles: plainFileObjects, filesContent: [] });\n          return;\n        }\n\n        const files = (await fromEvent(evt)) as FileWithPath[];\n\n        const validationsAfterParsing: UseFilePickerError<CustomErrors>[] = [];\n        const filesContent = (await Promise.all(\n          files.map(file =>\n            parseFile(file).catch(\n              (fileError: UseFilePickerError<CustomErrors> | UseFilePickerError<CustomErrors>[]) => {\n                validationsAfterParsing.push(...(Array.isArray(fileError) ? fileError : [fileError]));\n              }\n            )\n          )\n        )) as FileContent<ExtractContentTypeFromConfig<ConfigType>>[];\n        setLoading(false);\n\n        if (validationsAfterParsing.length) {\n          setPlainFiles([]);\n          setFilesContent([]);\n          setFileErrors(errors => [...errors, ...validationsAfterParsing]);\n          onFilesRejected?.({ errors: validationsAfterParsing });\n          onFilesSelected?.({\n            errors: validationsBeforeParsing.concat(validationsAfterParsing),\n          });\n          return;\n        }\n\n        setFilesContent(filesContent);\n        setPlainFiles(plainFileObjects);\n        setFileErrors([]);\n        onFilesSuccessfullySelected?.({ filesContent: filesContent, plainFiles: plainFileObjects });\n        onFilesSelected?.({\n          plainFiles: plainFileObjects,\n          filesContent: filesContent,\n        });\n      },\n      initializeWithCustomParameters\n    );\n  };\n\n  return {\n    openFilePicker,\n    filesContent,\n    errors: fileErrors,\n    loading,\n    plainFiles,\n    clear: clearWithEventListener,\n  };\n}\n\nexport default useFilePicker;\n","import { useCallback, useState } from 'react';\nimport {\n  ExtractContentTypeFromConfig,\n  FileContent,\n  ImperativeFilePickerReturnTypes,\n  SelectedFiles,\n  SelectedFilesOrErrors,\n  useImperativeFilePickerConfig,\n} from './interfaces';\nimport useFilePicker from './useFilePicker';\n\n/**\n * A version of useFilePicker hook that keeps selected files between selections. On top of that it allows to remove files from the selection.\n */\nfunction useImperativeFilePicker<\n  CustomErrors = unknown,\n  ConfigType extends useImperativeFilePickerConfig<CustomErrors> = useImperativeFilePickerConfig<CustomErrors>\n>(props: ConfigType): ImperativeFilePickerReturnTypes<ExtractContentTypeFromConfig<ConfigType>, CustomErrors> {\n  const { onFilesSelected, onFilesSuccessfullySelected, validators, onFileRemoved } = props;\n\n  const [allPlainFiles, setAllPlainFiles] = useState<File[]>([]);\n  const [allFilesContent, setAllFilesContent] = useState<FileContent<ExtractContentTypeFromConfig<ConfigType>>[]>([]);\n\n  const { openFilePicker, loading, errors, clear } = useFilePicker<CustomErrors, ConfigType>({\n    ...props,\n    onFilesSelected: (data: SelectedFilesOrErrors<ExtractContentTypeFromConfig<ConfigType>, CustomErrors>) => {\n      if (!onFilesSelected) return;\n      if (data.errors?.length) {\n        return onFilesSelected(data);\n      }\n      // override the files property to return all files that were selected previously and in the current batch\n      onFilesSelected({\n        errors: undefined,\n        plainFiles: [...allPlainFiles, ...(data.plainFiles || [])],\n        filesContent: [...allFilesContent, ...(data.filesContent || [])] as any,\n      });\n    },\n    onFilesSuccessfullySelected: (data: SelectedFiles<any>) => {\n      setAllPlainFiles(previousPlainFiles => previousPlainFiles.concat(data.plainFiles));\n      setAllFilesContent(previousFilesContent => previousFilesContent.concat(data.filesContent));\n\n      if (!onFilesSuccessfullySelected) return;\n      // override the files property to return all files that were selected previously and in the current batch\n      onFilesSuccessfullySelected({\n        plainFiles: [...allPlainFiles, ...(data.plainFiles || [])],\n        filesContent: [...allFilesContent, ...(data.filesContent || [])],\n      });\n    },\n  });\n\n  const clearAll = useCallback(() => {\n    clear();\n    // clear previous files\n    setAllPlainFiles([]);\n    setAllFilesContent([]);\n  }, [clear]);\n\n  const removeFileByIndex = useCallback(\n    (index: number) => {\n      setAllFilesContent(previousFilesContent => [\n        ...previousFilesContent.slice(0, index),\n        ...previousFilesContent.slice(index + 1),\n      ]);\n      setAllPlainFiles(previousPlainFiles => {\n        const removedFile = previousPlainFiles[index];\n        validators?.forEach(validator => validator.onFileRemoved?.(removedFile, index));\n        onFileRemoved?.(removedFile, index);\n        return [...previousPlainFiles.slice(0, index), ...previousPlainFiles.slice(index + 1)];\n      });\n    },\n    [validators, onFileRemoved]\n  );\n\n  const removeFileByReference = useCallback(\n    (file: File) => {\n      const index = allPlainFiles.findIndex(f => f === file);\n      if (index === -1) return;\n      removeFileByIndex(index);\n    },\n    [removeFileByIndex, allPlainFiles]\n  );\n\n  return {\n    openFilePicker,\n    plainFiles: allPlainFiles,\n    filesContent: allFilesContent,\n    loading,\n    errors,\n    clear: clearAll,\n    removeFileByIndex,\n    removeFileByReference,\n  };\n}\n\nexport default useImperativeFilePicker;\n"],"names":["openFileDialog","accept","multiple","callback","initializeWithCustomAttributes","inputElement","document","createElement","style","display","body","appendChild","type","addEventListener","arg","removeChild","dispatchEvent","MouseEvent","useValidators","_ref","onFilesSelectedProp","onFilesSelected","onFilesSuccessfullySelectedProp","onFilesSuccessfullySelected","onFilesRejectedProp","onFilesRejected","onClearProp","onClear","validators","data","forEach","validator","errors","useFilePicker","props","_props$accept","_props$multiple","_props$readAs","readAs","_props$readFilesConte","readFilesContent","_props$validators","initializeWithCustomParameters","_useState","useState","plainFiles","setPlainFiles","_useState2","filesContent","setFilesContent","_useState3","fileErrors","setFileErrors","_useState4","loading","setLoading","_useValidators","clear","useCallback","clearWithEventListener","parseFile","file","Promise","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","resolve","reject","reader","readStrategy","addError","wrap","_callee2$","_context2","prev","next","FileReader","call","_ref2","others","_extends","_objectDestructuringEmpty","onload","_callee","_callee$","_context","abrupt","all","map","validateAfterParsing","err","then","content","result","name","lastModified","stop","onerror","readerError","error","causedByFile","_x","_x2","apply","arguments","openFilePicker","fileExtensions","Array","join","_ref4","_callee3","evt","plainFileObjects","validationsBeforeParsing","files","validationsAfterParsing","_callee3$","_context3","target","from","validateBeforeParsing","isArray","sent","flat","filter","Boolean","length","fromEvent","fileError","push","concat","_x3","useImperativeFilePicker","onFileRemoved","allPlainFiles","setAllPlainFiles","allFilesContent","setAllFilesContent","_useFilePicker","_data$errors","undefined","previousPlainFiles","previousFilesContent","clearAll","removeFileByIndex","index","slice","removedFile","removeFileByReference","findIndex","f"],"mappings":"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"}